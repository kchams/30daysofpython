import requests

url = "https://httpbin.org/status/404"  # Un lien qui retourne 404

try:
    response = requests.get(url)
    response.raise_for_status()  # Vérifie si la réponse est OK
    print("Requête réussie !")
    print(response.text)

except requests.exceptions.HTTPError as errh:
    print(f"Erreur HTTP : {errh}")
except requests.exceptions.ConnectionError as errc:
    print(f"Erreur de connexion : {errc}")
except requests.exceptions.Timeout as errt:
    print(f"Délai d’attente dépassé : {errt}")
except requests.exceptions.RequestException as err:
    print(f"Erreur inattendue : {err}")



V2 :

import requests

def safe_get(url, timeout=10):
    try:
        response = requests.get(url, timeout=timeout)
        response.raise_for_status()
        return response.text  # Retourne le contenu si tout va bien
    except requests.exceptions.HTTPError as e:
        print(f"[HTTP Error] {e}")
    except requests.exceptions.ConnectionError as e:
        print(f"[Connection Error] {e}")
    except requests.exceptions.Timeout as e:
        print(f"[Timeout Error] {e}")
    except requests.exceptions.RequestException as e:
        print(f"[Unexpected Error] {e}")

# Exemple d'utilisation
data = safe_get("https://httpbin.org/status/404")
if data:
    print(data[:200])  # Affiche les 200 premiers caractères
